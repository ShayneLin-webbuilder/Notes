# Final will have more database questions than R, but is still cumulative
# CONTROL STRUCTURES and WRITING FUNCTIONS
# %% modulus operand
x == y
x == y # x is equal to y
x != y # x is not equal to y
# x is not equal to y
# x is not equal to y
# x is not equal to y
x <- 5
y <- cumsum(x)
y <- cumsum(x)
head(y)
head(y)
x <- 1:100
y <- cumsum(x)
head(y)
medium(y)
# CONTROL STRUCTURES set a condition and tell R what to do when that condition
# CONTROL STRUCTURES set a condition and tell R what to do when that condition
x <- 2
x==2
if(x==3){ print("This is true")} # Nothing happens
if(x==2){ print("This is true")} # "This is true"
# %in% logical operator. Used to identify if an element belongs to an R project
x <- c("Hello", "world")
if(x==3){ print("This is true")} # Nothing happens
x <- 2
if(x==3){ print("This is true")} # Nothing happens
if(x==2){ print("This is true")} # "This is true"
# %in% logical operator. Used to identify if an element belongs to an R project
x <- c("Hello", "world")
if("hello" %in% x){print ("hello")} # "hello"
if("Hello" %in% x){print ("hello")} # "hello"
# if and if...else
x <- c("hello","world")
x <- 1:10
x <- 1:10
ifelse(x<5 | x>8,x,0) # if x is less than 5 OR greater than 8, print the values for which they are true, otherwise print 0
x <- 1:10
ifelse(x<5 | x>8,yes,no) # if x is less than 5 OR greater than 8, print the values for which they are true, otherwise print 0
ifelse(x<5 | x>8,1,0) # if x is less than 5 OR greater than 8, print the values for which they are true, otherwise print 0
ifelse(x<5 | x>8,x,0) # if x is less than 5 OR greater than 8, print the values for which they are true, otherwise print 0
ifelse(x<3 | x>9, x,"Missing") # a char string, returns value as characters (in quotes)
x <- c(5:2)
ifelse(x==5 | x>3, x,0) #5 4 0 0
x <- 1
x <- 1
x <- 1
repeat{
print(x)
x = x+1
if (x > 4){
break
}
}
i <- 1
while (i < 6) {
print(i)
i = i+1
}
while (i < 6) {
print(i)
i = i+1
}
i <- 1
print(i)
while (i < 6) {
print(i)
i = i+1
}
while (i <= 6) {
print(i)
i = i+1
}
while (i <= 6) {
print(i)
i = i+1
}
i <- 1
while (i <= 6) {
print(i)
i = i+1
}
x <- c(2,4)
# write a while loop that adds even numbers to x, WHILE the length of x is less than 12
# after the 1st iteration of the while loop, we want 6 to be added to x. So x = c(2,4,6),
# write a while loop that adds even numbers to x, WHILE the length of x is less than 12
# after the 1st iteration of the while loop, we want 6 to be added to x.
# write a while loop that adds even numbers to x, WHILE the length of x is less than 12
# after the 1st iteration of the while loop, we want 6 to be added to x.
#So x = c(2,4,6), 2nd iteration x = c(2,4,6,8) and the 3rd x = (2,4,6,10)
# Given x <- c(2,4)
# write a while loop that adds even numbers to x, WHILE the length of x is less than 12
# after the 1st iteration of the while loop, we want 6 to be added to x.
#So x = c(2,4,6), 2nd iteration x = c(2,4,6,8) and the 3rd x = (2,4,6,10)
x <- c(2,5,3,9,8,11,)
x <- c(2,5,3,9,8,11,)
x <- c(2,5,3,9,8,11,6)
count <- 0
# write code for loop that increments x by three and decreases y by two, for each i
x <- 1
y <- 40
i <- c(1:10)
for(j in i){
x = x+3
y = y-2
}
x # 31
y # 40
# ***For Loop Second Exercise***
# write code for loop that increments x by three and decreases y by two, for each i
x <- 1
y <- 40
i <- c(1:10)
for(j in i){
x <- x+3
y = y-2
}
x # 31
y # 40
fahrenheit_to_centigrade <- function(temp_F) {
temp_C <- ((temp_F - 32) * (5/9))
return(temp_C)
}
fahrenheit_to_centigrade(82)
# Create a function to print squares of numbers in sequence, call the function supplying 6 as an argument
My_function <- function(a) {
for(i in 1:a){
b = i^2
print(b)
}
}
My_function(4)
for(a in 2:8){
for(b in 1:6){
if(a<b){
cat(a, 'less than',b)
}
}
}
for(a in 2:8){
for(b in 1:6){
if(a<b){
cat(a, 'less than',b,'\n')
}
}
}
for(a in 2:8){
for(b in 1:6){
if(a<b){
cat(a, 'less than',b,'/n')
}
}
}
for(a in 2:8){
for(b in 1:6){
if(a<b){
cat(a, 'less than',b,'\n')
}
}
}
**SQL Query**
![](/Users/shayne_lin/Desktop/work experiennce/UCSB/PSTAT10/Pstat10/pic/p10.png)
mymat   <-   matrix(c(2,0,1,2,3,0,3,0,1,1),5,2)
mymat
myvec
?seq()
seq(1,9,2)
?any()
myvec <- c(2.73, 5.40, 2.15, 5.29, 1.36,2.16, 1.41, 6.97,7.99,9.52)
mymat <- matrix(c(2,0,1,2,3,0,3,0,1,1),5,2)
myvec
mymat
matrix(myvec,2,5)
matrix(myvec,2,5)[2,1]
matrix(myvec,2,5)[3,1]
matrix(myvec,2,5)[1,1]
matrix(myvec,2,5)[2,5]
mymatrix <- matrix(myvec,2,5)
mymatrix
?list()
```
# if(condition){ \ do any code here if the condition is FALSE\}
a <- 3
mynumber <- 4
if(a<=mynumber){
cat("Condition was", a<=mynumber)
a <- a^2
} else {
cat("Condition was", a<=mynumber)
a <- a-3.5
}
```
vec1 <- c(2,1,1,3,2,1,0)
vec1 <- c(2,1,1,3,2,1,0)
vec1[1]
?dbWriteTable()
?dbWriteTable()
data()
?mtcars
head(mtcars)
nrow(mtcars)
ncol(mtcars)
install.packages("RSQLite")
install.packages(c("DBI"))
install.packages(c("DBI"))
install.packages("RSQLite")
install.packages("dbplyr")
library(DBI)
library(RSQLite)
#code shown below:
install.packages("bit")
install.packages("RSQLite")
remove.packages("RSQLite")
remove.packages("bit")
rm -r /data/data/com.termux/files/usr/lib/R/library/bits
devtools::install_github("rstats-db/RSQLite")
install.packages("devtools")
devtools::install_github("rstats-db/RSQLite")
R.version
install.packages("RSQLite")
library(RSQLite)
library(RSQLite)
library(dplyr)
Ylibrary(DBI)
library(DBI)
mycars <- dbConnect(RSQLite::SQLite(), "mtcars")
View(mycars)
View(mycars)
library(dplyr)
install.packages( "dplyr")
mycarsconnect <- dbConnect(RSQLite::SQLite(), "mtcars")
library(dplyr)
# Look at the tables with the connection: mycarsconnect
dbListTables(mycarsconnect)
mycarsconnect
mycarsconnect_df <- collect(mycarsconnect)
library(DBI)
mycarsconnect <- dbConnect(RSQLite::SQLite(), "mtcars")
View(mymat)
View(mycars)
View(mycarsconnect)
getwd()
?read.csv()
housing_data <-read.csv("/Users/shayne_lin/Desktop/work experiennce/UCSB/PSTAT10/Pstat10/housing.csv",header = TRUE)
View(housing_data)
housing_data <-read.csv("/Users/shayne_lin/Desktop/work experiennce/UCSB/PSTAT10/Pstat10/housing.csv",header = FALSE)
View(housing_data)
housing_data <-read.csv("/Users/shayne_lin/Desktop/work experiennce/UCSB/PSTAT10/Pstat10/SampleData1.csv",header = FALSE)
Sampledata <-read.csv("/Users/shayne_lin/Desktop/work experiennce/UCSB/PSTAT10/Pstat10/SampleData1.xlsx",header = FALSE)
View(Sampledata)
library(readxl)
SampleData1 <- read_excel("SampleData1.xlsx")
View(SampleData1)
#code shown below:
library(readxl)
SampleData1 <- read_excel("SampleData1.xlsx")
SampleData1 <- read_excel("SampleData1.xlsx")
View(Sampledata)
View(SampleData1)
Portal_SampleData1 <- dbConnect(RSQLite::SQLite(),"SampleData1")
View(Portal_SampleData1)
dbListTables(Portal_SampleData1)
View(mymat)
View(mymatrix)
mysample_df <- collect(Portal_SampleData1)
library(DBI)
library(dplyr)
mysample_df <- collect(Portal_SampleData1)
library(readxl)
library(DBI)
library(RSQLite)
library(dplyr)
mysample_df <- collect(Portal_SampleData1)
View(Sampledata)
View(SampleData1)
View(SampleData1)
View(SampleData1)
View(SampleData1)
library(readxl)
SampleData1 <- read_excel("SampleData1.xlsx")
View(SampleData1)
View(SampleData1)
head(SampleData1)
install.packages("digest")
library(dplyr)
library("dplyr")
install.packages("ggplot2")
install.packages("tidyverse")
install.packages("ggplot2")
install.packages("tidyverse")
install.packages("ggplot")
install.packages("ggplot2")
getwd()
setwd("/Users/shayne_lin/Desktop/work experiennce/UCSB/PSTAT10/Harvord")
getwd()
getwd()
